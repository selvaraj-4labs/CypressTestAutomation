{
  "stats": {
    "suites": 1,
    "tests": 30,
    "passes": 26,
    "pending": 0,
    "failures": 4,
    "start": "2021-07-12T05:42:56.747Z",
    "end": "2021-07-12T05:53:10.290Z",
    "duration": 613543,
    "testsRegistered": 30,
    "passPercent": 86.66666666666667,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "b6fdc63b-7f93-478a-8893-eaebc0668fa8",
      "title": "",
      "fullFile": "cypress/integration/dashboard.feature",
      "file": "cypress/integration/dashboard.feature",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "8a336284-8926-4146-a921-1a6f4e6545d8",
          "title": "VAULD - SMOKE",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "#1) Dashboard - Your Funds",
              "fullTitle": "VAULD - SMOKE #1) Dashboard - Your Funds",
              "timedOut": null,
              "duration": 34475,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "75a9e29b-96b9-4341-87ac-c080b9f72ba8",
              "parentUUID": "8a336284-8926-4146-a921-1a6f4e6545d8",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "#2) Dashboard - Fixed Deposit",
              "fullTitle": "VAULD - SMOKE #2) Dashboard - Fixed Deposit",
              "timedOut": null,
              "duration": 27267,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "f829e68a-3d19-4aa0-a341-d34117a753d9",
              "parentUUID": "8a336284-8926-4146-a921-1a6f4e6545d8",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "#3) Dashboard - Start Trading",
              "fullTitle": "VAULD - SMOKE #3) Dashboard - Start Trading",
              "timedOut": null,
              "duration": 14115,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "2fc55248-4038-4640-b7f6-87b5375670bb",
              "parentUUID": "8a336284-8926-4146-a921-1a6f4e6545d8",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "#4) Dashboard - Your Account Manager",
              "fullTitle": "VAULD - SMOKE #4) Dashboard - Your Account Manager",
              "timedOut": null,
              "duration": 14673,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "4d350885-9902-4a55-b0fc-b4ee13eca90c",
              "parentUUID": "8a336284-8926-4146-a921-1a6f4e6545d8",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "#5) Wallet - Deposit",
              "fullTitle": "VAULD - SMOKE #5) Wallet - Deposit",
              "timedOut": null,
              "duration": 10033,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "3eed0ee4-64d5-40fe-a872-1deb83cdba53",
              "parentUUID": "8a336284-8926-4146-a921-1a6f4e6545d8",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "#6) Wallet - Send",
              "fullTitle": "VAULD - SMOKE #6) Wallet - Send",
              "timedOut": null,
              "duration": 19267,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "cde8e522-b2cb-4c72-8ba2-5591c925fa2b",
              "parentUUID": "8a336284-8926-4146-a921-1a6f4e6545d8",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "#7) Wallet - Loans - Take Loan",
              "fullTitle": "VAULD - SMOKE #7) Wallet - Loans - Take Loan",
              "timedOut": null,
              "duration": 14873,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "8a027158-66d4-495a-a5b5-cf1c4167283c",
              "parentUUID": "8a336284-8926-4146-a921-1a6f4e6545d8",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "#8) Wallet - Pay Back Loan using Crypto",
              "fullTitle": "VAULD - SMOKE #8) Wallet - Pay Back Loan using Crypto",
              "timedOut": null,
              "duration": 17227,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "7dba29b0-dc41-4f02-baa5-a9eb4fd2e842",
              "parentUUID": "8a336284-8926-4146-a921-1a6f4e6545d8",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "#9) Wallet - Pay Back Loan using Collateral",
              "fullTitle": "VAULD - SMOKE #9) Wallet - Pay Back Loan using Collateral",
              "timedOut": null,
              "duration": 17444,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "667c1c63-89a5-4792-a09e-fd8c9b4dfffc",
              "parentUUID": "8a336284-8926-4146-a921-1a6f4e6545d8",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "#10) Wallet - Take More Loan",
              "fullTitle": "VAULD - SMOKE #10) Wallet - Take More Loan",
              "timedOut": null,
              "duration": 16230,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "0de3c759-bf20-41d6-9b5a-699d2a1dd588",
              "parentUUID": "8a336284-8926-4146-a921-1a6f4e6545d8",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "#11) Wallet - Add More Collateral",
              "fullTitle": "VAULD - SMOKE #11) Wallet - Add More Collateral",
              "timedOut": null,
              "duration": 15549,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "9a54eef7-7e74-4a03-8cc2-e812b280e284",
              "parentUUID": "8a336284-8926-4146-a921-1a6f4e6545d8",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "#12) Wallet - Release Collateral",
              "fullTitle": "VAULD - SMOKE #12) Wallet - Release Collateral",
              "timedOut": null,
              "duration": 10426,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "d7595f50-1a33-4ce7-af84-7d55a053ce92",
              "parentUUID": "8a336284-8926-4146-a921-1a6f4e6545d8",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "#13) Wallet - Deposit Via RTGS",
              "fullTitle": "VAULD - SMOKE #13) Wallet - Deposit Via RTGS",
              "timedOut": null,
              "duration": 17947,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "0293a702-c045-402c-84af-200626ec8230",
              "parentUUID": "8a336284-8926-4146-a921-1a6f4e6545d8",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "#14) Wallet - Deposit Via UPI",
              "fullTitle": "VAULD - SMOKE #14) Wallet - Deposit Via UPI",
              "timedOut": null,
              "duration": 12044,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "34eb3a0d-e1c7-45e2-bdf1-1769000bd52e",
              "parentUUID": "8a336284-8926-4146-a921-1a6f4e6545d8",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "#15) Wallet - Deposit Via Visa",
              "fullTitle": "VAULD - SMOKE #15) Wallet - Deposit Via Visa",
              "timedOut": null,
              "duration": 11726,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "adf1aac2-6217-4d0f-80ea-c4e8e4d5ee36",
              "parentUUID": "8a336284-8926-4146-a921-1a6f4e6545d8",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "#16) Wallet - Withdraw",
              "fullTitle": "VAULD - SMOKE #16) Wallet - Withdraw",
              "timedOut": null,
              "duration": 15631,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "c1afff9d-069e-4c08-b1be-344bb0da6cc0",
              "parentUUID": "8a336284-8926-4146-a921-1a6f4e6545d8",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "#17) Fixed Deposit - Auto Renew OFF",
              "fullTitle": "VAULD - SMOKE #17) Fixed Deposit - Auto Renew OFF",
              "timedOut": null,
              "duration": 21113,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "45725c2d-f265-4026-a52c-2047a8ae3211",
              "parentUUID": "8a336284-8926-4146-a921-1a6f4e6545d8",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "#18) Fixed Deposit - Auto Renew ON",
              "fullTitle": "VAULD - SMOKE #18) Fixed Deposit - Auto Renew ON",
              "timedOut": null,
              "duration": 23979,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "a11de497-5830-4570-b325-26aa0a4e091d",
              "parentUUID": "8a336284-8926-4146-a921-1a6f4e6545d8",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "#19) Fixed Deposit - Auto Renew ON - Principal Only",
              "fullTitle": "VAULD - SMOKE #19) Fixed Deposit - Auto Renew ON - Principal Only",
              "timedOut": null,
              "duration": 21877,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "f28d5aa2-7d4a-49f7-adaf-5b577ad949a5",
              "parentUUID": "8a336284-8926-4146-a921-1a6f4e6545d8",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "#20) Instant Buy & Sell - BUY",
              "fullTitle": "VAULD - SMOKE #20) Instant Buy & Sell - BUY",
              "timedOut": null,
              "duration": 13793,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "adc1890e-3836-40e6-9091-ad8d20520db6",
              "parentUUID": "8a336284-8926-4146-a921-1a6f4e6545d8",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "#21) Instant Buy & Sell - SELL",
              "fullTitle": "VAULD - SMOKE #21) Instant Buy & Sell - SELL",
              "timedOut": null,
              "duration": 16757,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "1b3fb3b2-810f-4ca4-97ed-0875e126bf57",
              "parentUUID": "8a336284-8926-4146-a921-1a6f4e6545d8",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "#22) Instant Swap",
              "fullTitle": "VAULD - SMOKE #22) Instant Swap",
              "timedOut": null,
              "duration": 24855,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {
                "message": "AssertionError: Timed out retrying after 10000ms: expected '<div.font-h1.color-secondary-dark.ng-tns-c134-6>' to contain text 'Success', but the text was ' Failed '",
                "estack": "AssertionError: Timed out retrying after 10000ms: expected '<div.font-h1.color-secondary-dark.ng-tns-c134-6>' to contain text 'Success', but the text was ' Failed '\n    at Context.eval (https://uat.bankofhodlers.com/__cypress/tests?p=cypress\\integration\\dashboard.feature:105:72)\n    at Context.resolveAndRunStepDefinition (https://uat.bankofhodlers.com/__cypress/tests?p=cypress\\integration\\dashboard.feature:10819:9)\n    at Context.eval (https://uat.bankofhodlers.com/__cypress/tests?p=cypress\\integration\\dashboard.feature:10148:35)",
                "diff": "- ' Failed '\n+ 'Success'\n"
              },
              "uuid": "283b7667-e870-443d-8522-eb9972d599fa",
              "parentUUID": "8a336284-8926-4146-a921-1a6f4e6545d8",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "#23) Pro Trading - Buy-Limit",
              "fullTitle": "VAULD - SMOKE #23) Pro Trading - Buy-Limit",
              "timedOut": null,
              "duration": 20601,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "fff292e6-ea47-4715-b9ad-62f4666e570e",
              "parentUUID": "8a336284-8926-4146-a921-1a6f4e6545d8",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "#24) Pro Trading - Sell-Limit",
              "fullTitle": "VAULD - SMOKE #24) Pro Trading - Sell-Limit",
              "timedOut": null,
              "duration": 28799,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {
                "message": "AssertionError: Timed out retrying after 10000ms: Expected to find element: `.notifications-container .color-secondary-dark`, but never found it.",
                "estack": "AssertionError: Timed out retrying after 10000ms: Expected to find element: `.notifications-container .color-secondary-dark`, but never found it.\n    at Context.eval (https://uat.bankofhodlers.com/__cypress/tests?p=cypress\\integration\\dashboard.feature:109:6)\n    at Context.resolveAndRunStepDefinition (https://uat.bankofhodlers.com/__cypress/tests?p=cypress\\integration\\dashboard.feature:10819:9)\n    at Context.eval (https://uat.bankofhodlers.com/__cypress/tests?p=cypress\\integration\\dashboard.feature:10148:35)",
                "diff": null
              },
              "uuid": "6980f677-0ee6-4b02-ba7b-457d3860466e",
              "parentUUID": "8a336284-8926-4146-a921-1a6f4e6545d8",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "#25) Pro Trading - Buy-Market",
              "fullTitle": "VAULD - SMOKE #25) Pro Trading - Buy-Market",
              "timedOut": null,
              "duration": 32620,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {
                "message": "AssertionError: Timed out retrying after 10000ms: expected '<div.x-font-h2.color-secondary-dark.text-bold.ng-tns-c117-9>' to contain text 'Limit Order Created!', but the text was ' Failed To Place Order! '",
                "estack": "AssertionError: Timed out retrying after 10000ms: expected '<div.x-font-h2.color-secondary-dark.text-bold.ng-tns-c117-9>' to contain text 'Limit Order Created!', but the text was ' Failed To Place Order! '\n    at Context.eval (https://uat.bankofhodlers.com/__cypress/tests?p=cypress\\integration\\dashboard.feature:109:66)\n    at Context.resolveAndRunStepDefinition (https://uat.bankofhodlers.com/__cypress/tests?p=cypress\\integration\\dashboard.feature:10819:9)\n    at Context.eval (https://uat.bankofhodlers.com/__cypress/tests?p=cypress\\integration\\dashboard.feature:10148:35)",
                "diff": "- ' Failed To Place Order! '\n+ 'Limit Order Created!'\n"
              },
              "uuid": "0ac404ef-5363-4aa8-8da4-6cc44c2dea69",
              "parentUUID": "8a336284-8926-4146-a921-1a6f4e6545d8",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "#26) Pro Trading - Sell-Market",
              "fullTitle": "VAULD - SMOKE #26) Pro Trading - Sell-Market",
              "timedOut": null,
              "duration": 32988,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {
                "message": "AssertionError: Timed out retrying after 10000ms: expected '<div.x-font-h2.color-secondary-dark.text-bold.ng-tns-c150-9>' to contain text 'Limit Order Created!', but the text was ' Failed To Place Order! '",
                "estack": "AssertionError: Timed out retrying after 10000ms: expected '<div.x-font-h2.color-secondary-dark.text-bold.ng-tns-c150-9>' to contain text 'Limit Order Created!', but the text was ' Failed To Place Order! '\n    at Context.eval (https://uat.bankofhodlers.com/__cypress/tests?p=cypress\\integration\\dashboard.feature:109:66)\n    at Context.resolveAndRunStepDefinition (https://uat.bankofhodlers.com/__cypress/tests?p=cypress\\integration\\dashboard.feature:10819:9)\n    at Context.eval (https://uat.bankofhodlers.com/__cypress/tests?p=cypress\\integration\\dashboard.feature:10148:35)",
                "diff": "- ' Failed To Place Order! '\n+ 'Limit Order Created!'\n"
              },
              "uuid": "a437cfd5-f6bb-42f3-ae7c-22f0399d4f27",
              "parentUUID": "8a336284-8926-4146-a921-1a6f4e6545d8",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "#27) OTC Trade",
              "fullTitle": "VAULD - SMOKE #27) OTC Trade",
              "timedOut": null,
              "duration": 24337,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "691b6aeb-20f1-4035-9778-944ebd06ef3d",
              "parentUUID": "8a336284-8926-4146-a921-1a6f4e6545d8",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "#28) AIP",
              "fullTitle": "VAULD - SMOKE #28) AIP",
              "timedOut": null,
              "duration": 26199,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "6a0124cc-5ba7-4144-ae49-b395b1093bfc",
              "parentUUID": "8a336284-8926-4146-a921-1a6f4e6545d8",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "#29) Referral - Create Campaign",
              "fullTitle": "VAULD - SMOKE #29) Referral - Create Campaign",
              "timedOut": null,
              "duration": 28500,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "4e8cb5c1-8f51-4bd2-856e-6b1c4ea5e1a0",
              "parentUUID": "8a336284-8926-4146-a921-1a6f4e6545d8",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "#30) Referral - Share",
              "fullTitle": "VAULD - SMOKE #30) Referral - Share",
              "timedOut": null,
              "duration": 22911,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "444dfe3b-9703-4278-b4de-b3772e86f45a",
              "parentUUID": "8a336284-8926-4146-a921-1a6f4e6545d8",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "75a9e29b-96b9-4341-87ac-c080b9f72ba8",
            "f829e68a-3d19-4aa0-a341-d34117a753d9",
            "2fc55248-4038-4640-b7f6-87b5375670bb",
            "4d350885-9902-4a55-b0fc-b4ee13eca90c",
            "3eed0ee4-64d5-40fe-a872-1deb83cdba53",
            "cde8e522-b2cb-4c72-8ba2-5591c925fa2b",
            "8a027158-66d4-495a-a5b5-cf1c4167283c",
            "7dba29b0-dc41-4f02-baa5-a9eb4fd2e842",
            "667c1c63-89a5-4792-a09e-fd8c9b4dfffc",
            "0de3c759-bf20-41d6-9b5a-699d2a1dd588",
            "9a54eef7-7e74-4a03-8cc2-e812b280e284",
            "d7595f50-1a33-4ce7-af84-7d55a053ce92",
            "0293a702-c045-402c-84af-200626ec8230",
            "34eb3a0d-e1c7-45e2-bdf1-1769000bd52e",
            "adf1aac2-6217-4d0f-80ea-c4e8e4d5ee36",
            "c1afff9d-069e-4c08-b1be-344bb0da6cc0",
            "45725c2d-f265-4026-a52c-2047a8ae3211",
            "a11de497-5830-4570-b325-26aa0a4e091d",
            "f28d5aa2-7d4a-49f7-adaf-5b577ad949a5",
            "adc1890e-3836-40e6-9091-ad8d20520db6",
            "1b3fb3b2-810f-4ca4-97ed-0875e126bf57",
            "fff292e6-ea47-4715-b9ad-62f4666e570e",
            "691b6aeb-20f1-4035-9778-944ebd06ef3d",
            "6a0124cc-5ba7-4144-ae49-b395b1093bfc",
            "4e8cb5c1-8f51-4bd2-856e-6b1c4ea5e1a0",
            "444dfe3b-9703-4278-b4de-b3772e86f45a"
          ],
          "failures": [
            "283b7667-e870-443d-8522-eb9972d599fa",
            "6980f677-0ee6-4b02-ba7b-457d3860466e",
            "0ac404ef-5363-4aa8-8da4-6cc44c2dea69",
            "a437cfd5-f6bb-42f3-ae7c-22f0399d4f27"
          ],
          "pending": [],
          "skipped": [],
          "duration": 608256,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "report",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "6.2.2"
    },
    "marge": {
      "options": {
        "reportDir": "cypress/reports",
        "reportFilename": "report",
        "reportPageTitle": "Vauld Test Automation",
        "embeddedScreenshots": true,
        "inlineAssets": true,
        "overwrite": false,
        "html": false,
        "json": true,
        "charts": true
      },
      "version": "5.2.0"
    }
  }
}